name: Build
on:
  push:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      fail-fast: true
      matrix:
        ffmpeg-version: ["n6.1", "n7.1", "n8.0"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          cache-from: type=registry,ref=ghcr.io/vindral-oss/ffmpeg-windows-builds:buildcache-${{ matrix.ffmpeg-version }}
          cache-to: type=registry,ref=ghcr.io/vindral-oss/ffmpeg-windows-builds:buildcache-${{ matrix.ffmpeg-version }},mode=max
          push: true
          tags: ghcr.io/vindral-oss/ffmpeg-windows-builds:${{ matrix.ffmpeg-version }}-${{ github.sha }}
          build-args: |
            FFMPEG_VERSION=${{ matrix.ffmpeg-version }}

      - name: Copy output
        if: github.ref == 'refs/heads/main'
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker run --name ffmpeg ghcr.io/vindral-oss/ffmpeg-windows-builds:${{ matrix.ffmpeg-version }}-${{ github.sha }}
          docker cp ffmpeg:/ffmpeg-output.7z ffmpeg-${{ matrix.ffmpeg-version }}.7z
          docker cp ffmpeg:/ffmpeg-source-${{ matrix.ffmpeg-version }}.tar.gz ffmpeg-source-${{ matrix.ffmpeg-version }}.tar.gz

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ matrix.ffmpeg-version }}-${{ github.sha }}
          draft: false
          files: |
            ffmpeg-${{ matrix.ffmpeg-version }}.7z
            ffmpeg-source-${{ matrix.ffmpeg-version }}.tar.gz

